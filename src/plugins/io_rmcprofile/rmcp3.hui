/*
        *** RMCProfile V3 Model Plugin
        *** src/plugins/io_rmcprofile/rmcp3.hui
        Copyright T. Youngs 2016-2018

        This file is part of Aten.
    
        Aten is free software: you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation, either version 3 of the License, or 
        (at your option) any later version.
                               
        Aten is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.

        You should have received a copy of the GNU General Public License
        along with Aten.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef ATEN_RMCPROFILE3MODELPLUGIN_H
#define ATEN_RMCPROFILE3MODELPLUGIN_H

#include "plugins/interfaces/fileplugin.h"

ATEN_BEGIN_NAMESPACE

// Forward Declarations
/* none */

// RMCProfile V3 Model Plugin
class RMCProfile3ModelPlugin : public QObject, public FilePluginInterface
{
	Q_OBJECT
	Q_PLUGIN_METADATA(IID "com.projectaten.Aten.FilePluginInterface.v1")
	Q_INTERFACES(AtenSpace::FilePluginInterface)


	public:
	// Constructor
	RMCProfile3ModelPlugin();
	// Destructor
	~RMCProfile3ModelPlugin();


	/*
	 * Instance Handling
	 */
	private:
	// Return a copy of the plugin object
	BasePluginInterface* makeCopy() const;


	/*
	 * Definition
	 */
	public:
	// Return type of plugin
	PluginTypes::PluginType type() const;
	// Return category of plugin
	int category() const;
	// Return name of plugin
	QString name() const;
	// Return nickname of plugin
	QString nickname() const;
	// Return whether plugin is enabled
	bool enabled() const;
	// Return description (long name) of plugin
	QString description() const;
	// Return related file extensions
	QStringList extensions() const;
	// Return exact names
	QStringList exactNames() const;


	/*
	 * Input / Output
	 */
	public:
	// Return whether this plugin can import data
	bool canImport() const;
	// Import data via the supplied parser
	bool importData();
	// Return whether this plugin can export data
	bool canExport() const;
	// Export data via the supplied parser
	bool exportData();
	// Import next partial data chunk
	bool importNextPart();
	// Skip next partial data chunk
	bool skipNextPart();


	/*
	 * Additional Functions / Data
	 */
	public:
	// Return whether the plugin has import options
	bool hasImportOptions() const;
	// Show import options dialog
	bool showImportOptionsDialog(KVMap& targetOptions) const;
	// Return whether the plugin has export options
	bool hasExportOptions() const;
	// Show export options dialog
	bool showExportOptionsDialog(KVMap& targetOptions) const;
};

ATEN_END_NAMESPACE

#endif
