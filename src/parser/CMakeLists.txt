BISON_TARGET(CommandParser parser_grammar.yy ${CMAKE_CURRENT_BINARY_DIR}/parser_grammar.cc)

add_library(parser STATIC
${BISON_CommandParser_OUTPUTS}
accessor.h
aten.h
atom.h
basisprimitive.h
basisshell.h
bond.h
cell.h
character.h
colourscale.h
colourscalepoint.h
commandnode.h
dialog.h
double.h
eigenvector.h
element.h
energystore.h
forcefieldatom.h
forcefieldbound.h
forcefield.h
format.h
glyph.h
glyphdata.h
grid.h
integer.h
matrix.h
mc.h
measurement.h
model.h
newnode.h
parser.h
pattern.h
patternbound.h
prefs.h
program.h
pvariable.h
returnvalue.h
scopenode.h
site.h
stepnode.h
tree.h
treegui.h
treenode.h
usercommandnode.h
variable.h
variablelist.h
variablenode.h
vector.h
vibration.h
vtypes.h
widget.h
zmatrix.h
zmatrixelement.h
aten.cpp
atom.cpp
basisprimitive.cpp
basisshell.cpp
bond.cpp
cell.cpp
character.cpp
colourscale.cpp
colourscalepoint.cpp
commandnode.cpp
dialog.cpp
double.cpp
eigenvector.cpp
element.cpp
energystore.cpp
forcefieldatom.cpp
forcefieldbound.cpp
forcefield.cpp
format.cpp
glyph.cpp
glyphdata.cpp
grid.cpp
integer.cpp
matrix.cpp
mc.cpp
measurement.cpp
model.cpp
newnode.cpp
parser.cpp
parser_lexer.cpp
pattern.cpp
patternbound.cpp
prefs.cpp
program.cpp
pvariable.cpp
returnvalue.cpp
scopenode.cpp
site.cpp
stepnode.cpp
tree.cpp
tree_opcheck.cpp
treegui.cpp
treenode.cpp
usercommandnode.cpp
variable.cpp
variablelist.cpp
variablenode.cpp
vector.cpp
vibration.cpp
vtypes.cpp
widget.cpp
zmatrix.cpp
zmatrixelement.cpp
)
target_include_directories(parser PRIVATE
  ${PROJECT_SOURCE_DIR}/src
  ${PROJECT_BINARY_DIR}/src
  ${Qt5Core_INCLUDE_DIRS}
  ${Qt5Gui_INCLUDE_DIRS}
  ${Qt5Widgets_INCLUDE_DIRS}
  ${PROJECT_SOURCE_DIR}/src/gui
  ${FREETYPE_INCLUDE_DIRS}
)

# target_link_libraries(parser treegui) 
